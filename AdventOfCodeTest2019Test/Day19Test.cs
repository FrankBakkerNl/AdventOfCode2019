using System;
using FluentAssertions;
using Xunit;
using static AdventOfCode2019.Day19;

namespace AdventOfCodeTest2019Test
{
    public class Day19Test
    {
        [Fact]
        public void TestFindBox()
        {
            var input = new[]
            {
        /*0 */  "#.......................................", 
                ".#......................................",
                "..##....................................",
                "...###..................................",
                "....###.................................",
        /*5*/   ".....####...............................",
                "......#####.............................",
                "......######............................",
                ".......#######..........................",
                "........###Xxxxx. ......................",
        /*10*/  ".........##xxxxx##......................",
                "..........#xxxxx###.....................",
                "...........xxxxx#####...................",
                "...........xxxxx######.................",
                "............############................",
                ".............#############..............",
                "..............##############............",
                "...............###############..........",
                "................###############.........",
                "................#################.......",
                ".................########OOOOOOOOOO.....",
                "..................#######OOOOOOOOOO#....",
                "...................######OOOOOOOOOO###..",
                "....................#####OOOOOOOOOO#####",
                ".....................####OOOOOOOOOO#####",
                ".....................####OOOOOOOOOO#####",
                "......................###OOOOOOOOOO#####",
                ".......................##OOOOOOOOOO#####",
                "........................#OOOOOOOOOO#####",
                ".........................OOOOOOOOOO#####",
                "..........................##############",
                "..........................##############",
                "...........................#############",
                "............................############",
                ".............................###########",
            };

            // mock for IntCodeProgram, reads sample
            bool IsAffected(int x, int y)
            {
                if (x<0 || y<0) return false;
                y = Math.Min(y, input.Length-1);
                x = Math.Min(x, input[y].Length-1);
                return input[y][x] != '.';
            }

            FindBoxSize(10, IsAffected).Should().Be(250020);
            FindBoxSize(5, IsAffected).Should().Be(110009);

        }

    }
}
